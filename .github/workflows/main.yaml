# This is a basic workflow to help you get started with Actions
#
name: Scan Open Source, Build Artifact, Build & Push Image

on:
  push:
    branches: [ main ]
    paths-ignore: 
      - kubernetes/**
      - .github/workflows/**
  pull_request:
    branches: [ main ]
    paths-ignore:
      - kubernetes/**
      - .github/workflows/**

env:
  # TODO: Change registry URL if not using Docker Hub
  CONTAINER_REGISTRY_URL: https://registry.hub.docker.com
  # TODO: Change Registry USERID to your userid
  REGISTRY_USERID: omearaj
  IMAGE_NAME: java-goof-trend 

jobs:
  snyk_vulnerability_check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
           
      - name: Run Snyk monitor
        uses: snyk/actions/maven@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_API_TOKEN }}
        with:
          command: monitor
        
  # Push image to Container Registry
  build-and-push-Docker-Image:
    # Ensure test job passes before pushing image.
    needs: snyk_vulnerability_check

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2
                 
      - name: Build and push Docker images
        uses: docker/build-push-action@v1
        with:
         username: ${{ env.REGISTRY_USERID }}
         password: ${{ secrets.DOCKER_KEY }}
         repository: omearaj/${{ env.IMAGE_NAME }}
         tag_with_ref: true
         tag_with_sha: true  
         add_git_labels: true
  
  image-test:
    needs: build-and-push-Docker-Image
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Cloud One Container Security Scan Action
        uses: felipecosta09/Deep-Security-Smart-Check-Scan-Action@v1.0.2
        with:
          # Mandatory
          DSSC_IMAGE_NAME: registry.hub.docker.com/omearaj/java-goof-trend # Change with your image path.
          # DSSC_IMAGE_NAME: $IMAGE_PATH
          DSSC_SMARTCHECK_HOST: demo.dssmartcheck.com
          DSSC_SMARTCHECK_USER: endtoenddemo
          DSSC_SMARTCHECK_PASSWORD: ${{ secrets.DSSC_SMARTCHECK_PASSWORD }}
          DSSC_IMAGE_PULL_AUTH: '{"username": "${{ secrets.REGISTRY_USERID }}","password": "${{ secrets.DOCKER_KEY }}"}'

          # Optional
          DSSC_INSECURE_SKIP_TLS_VERIFY: true
          DSSC_INSECURE_SKIP_REGISTRY_TLS_VERIFY: false
          # DSSC_PREREGISTRY_SCAN: false
          # DSSC_PREREGISTRY_HOST: myorg.com
          # DSSC_PREREGISTRY_USER: admin
          # DSSC_PREREGISTRY_PASSWORD: 12345
          # DSSC_RESULTS_FILE: /results.json
          # DSSC_FINDINGS_THRESHOLD: '{"malware": 100, "vulnerabilities": { "defcon1": 100, "critical": 100, "high": 100 }, "contents": { "defcon1": 100, "critical": 100, "high": 100 }, "checklists": { "defcon1": 100, "critical": 100, "high": 100 }}'

      
#      - name: Run Snyk to check Docker images for vulnerabilities
#        uses: snyk/actions/docker@master
#        env:
#          SNYK_TOKEN: ${{ secrets.SNYK_API_TOKEN }}
#        with:
#         image: omearaj/${{ env.IMAGE_NAME }}
#         command: test  
